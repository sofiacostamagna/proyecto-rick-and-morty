{"ast":null,"code":"// src/services/rickAndMortyApi.js\nimport axios from \"axios\";\nconst API_URL = \"https://rickandmortyapi.com/api/character\";\n\n// Función unificada para obtener personajes, con soporte para filtros opcionales\nexport const getAllCharacters = async (filters = {}) => {\n  try {\n    const params = new URLSearchParams(filters).toString();\n    const response = await axios.get(`${API_URL}?${params}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching characters:\", error);\n    throw new Error(\"Error fetching characters\");\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAllCharacters","filters","params","URLSearchParams","toString","response","get","data","error","console","Error"],"sources":["/Users/sofia/Desktop/rick-and-morty-lab/src/services/rickAndMortyApi.js"],"sourcesContent":["// src/services/rickAndMortyApi.js\nimport axios from \"axios\";\n\nconst API_URL = \"https://rickandmortyapi.com/api/character\";\n\n// Función unificada para obtener personajes, con soporte para filtros opcionales\nexport const getAllCharacters = async (filters = {}) => {\n  try {\n    const params = new URLSearchParams(filters).toString();\n    const response = await axios.get(`${API_URL}?${params}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching characters:\", error);\n    throw new Error(\"Error fetching characters\");\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2CAA2C;;AAE3D;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EACtD,IAAI;IACF,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC;IACtD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,IAAIG,MAAM,EAAE,CAAC;IACxD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAM,IAAIE,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}