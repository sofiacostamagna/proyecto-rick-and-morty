{"ast":null,"code":"var _jsxFileName = \"/Users/sofia/Desktop/rick-and-morty-lab/src/components/CharacterList/CharacterList.js\",\n  _s = $RefreshSig$();\n// src/components/CharacterList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCharacters } from \"../../services/rickAndMortyApi\";\nimport \"./CharacterList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterList = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    species: \"\",\n    gender: \"\",\n    status: \"\"\n  });\n  const [isFiltered, setIsFiltered] = useState(false); // Estado para verificar si hay filtros aplicados\n\n  const fetchCharacters = async () => {\n    setLoading(true);\n    try {\n      const data = await getAllCharacters(filters);\n      setCharacters(data.results);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const applyFilters = () => {\n    setIsFiltered(true); // Cambia el estado a true cuando se aplican filtros\n    fetchCharacters();\n  };\n  const clearFilters = () => {\n    setFilters({\n      species: \"\",\n      gender: \"\",\n      status: \"\"\n    });\n    setIsFiltered(false); // Restablece el estado de filtros a false\n    fetchCharacters(); // Vuelve a cargar todos los personajes sin filtros\n  };\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-list\",\n    children: [/*#__PURE__*/_jsxDEV(CharacterList, {\n      filters: filters,\n      setFilters: setFilters,\n      onFilter: applyFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/character/${character.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-more\",\n          children: \"Ver m\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, character.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearFilters,\n      className: \"btn-clear\",\n      disabled: !isFiltered // Desactivar el botón si no hay filtros aplicados\n      ,\n      children: \"Limpiar filtros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterList, \"U6bFd4j4a8GR7LgHA6lfJ4T3/Zo=\");\n_c = CharacterList;\nexport default CharacterList;\nvar _c;\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"names":["React","useEffect","useState","Link","getAllCharacters","jsxDEV","_jsxDEV","CharacterList","_s","characters","setCharacters","loading","setLoading","error","setError","filters","setFilters","species","gender","status","isFiltered","setIsFiltered","fetchCharacters","data","results","err","message","applyFilters","clearFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onFilter","map","character","src","image","alt","name","to","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sofia/Desktop/rick-and-morty-lab/src/components/CharacterList/CharacterList.js"],"sourcesContent":["// src/components/CharacterList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCharacters } from \"../../services/rickAndMortyApi\";\nimport \"./CharacterList.css\";\n\nconst CharacterList = () => {\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    species: \"\",\n    gender: \"\",\n    status: \"\",\n  });\n\n  const [isFiltered, setIsFiltered] = useState(false); // Estado para verificar si hay filtros aplicados\n\n  const fetchCharacters = async () => {\n    setLoading(true);\n    try {\n      const data = await getAllCharacters(filters);\n      setCharacters(data.results);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilters = () => {\n    setIsFiltered(true); // Cambia el estado a true cuando se aplican filtros\n    fetchCharacters();\n  };\n\n  const clearFilters = () => {\n    setFilters({\n      species: \"\",\n      gender: \"\",\n      status: \"\",\n    });\n    setIsFiltered(false); // Restablece el estado de filtros a false\n    fetchCharacters(); // Vuelve a cargar todos los personajes sin filtros\n  };\n\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"character-list\">\n      <CharacterList\n        filters={filters}\n        setFilters={setFilters}\n        onFilter={applyFilters}\n      />\n      {characters.map((character) => (\n        <div className=\"character-card\" key={character.id}>\n          <img src={character.image} alt={character.name} />\n          <h3>{character.name}</h3>\n          <Link to={`/character/${character.id}`}>\n            <button className=\"btn-more\">Ver más</button>\n          </Link>\n        </div>\n      ))}\n      <button\n        onClick={clearFilters}\n        className=\"btn-clear\"\n        disabled={!isFiltered} // Desactivar el botón si no hay filtros aplicados\n      >\n        Limpiar filtros\n      </button>\n    </div>\n  );\n};\n\nexport default CharacterList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}