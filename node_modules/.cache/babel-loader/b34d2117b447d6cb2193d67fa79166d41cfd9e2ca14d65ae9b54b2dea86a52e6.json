{"ast":null,"code":"var _jsxFileName = \"/Users/sofia/Desktop/rick-and-morty-lab/src/components/CharacterList/CharacterList.js\",\n  _s = $RefreshSig$();\n// src/components/CharacterList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCharacters } from \"../../services/rickAndMortyApi\";\nimport \"./CharacterList.css\";\nimport CharacterFilter from \"../CharactersFilter/CharacterFilter\";\nimport CharacterSearch from \"../CharacterSearch/CharacterSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterList = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    species: \"\",\n    gender: \"\",\n    status: \"\"\n  });\n  const fetchCharacters = async () => {\n    setLoading(true);\n    try {\n      const data = await getAllCharacters(filters);\n      console.log(data); // Verifica la respuesta de la API\n      setCharacters(data.results || []); // Asegúrate de que se actualice correctamente\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCharacters();\n  }, []); // Solo se ejecuta una vez al cargar el componente\n\n  const applyFilters = () => {\n    fetchCharacters();\n  };\n  const handleSearch = searchTerm => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      name: searchTerm // Actualizamos el estado de name con el término de búsqueda\n    }));\n    fetchCharacters();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-list\",\n    children: [/*#__PURE__*/_jsxDEV(CharacterSearchh, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharacterFilter, {\n      filters: filters,\n      setFilters: setFilters,\n      onFilter: applyFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-list\",\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/character/${character.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-more\",\n            children: \"Ver m\\xE1s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterList, \"CpDO8eGmy3fw6KgKDNqV+lEd6Vg=\");\n_c = CharacterList;\nexport default CharacterList;\nvar _c;\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"names":["React","useEffect","useState","Link","getAllCharacters","CharacterFilter","CharacterSearch","jsxDEV","_jsxDEV","CharacterList","_s","characters","setCharacters","loading","setLoading","error","setError","filters","setFilters","species","gender","status","fetchCharacters","data","console","log","results","err","message","applyFilters","handleSearch","searchTerm","prevFilters","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","CharacterSearchh","onSearch","onFilter","map","character","src","image","alt","to","id","_c","$RefreshReg$"],"sources":["/Users/sofia/Desktop/rick-and-morty-lab/src/components/CharacterList/CharacterList.js"],"sourcesContent":["// src/components/CharacterList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCharacters } from \"../../services/rickAndMortyApi\";\nimport \"./CharacterList.css\";\nimport CharacterFilter from \"../CharactersFilter/CharacterFilter\";\nimport CharacterSearch from \"../CharacterSearch/CharacterSearch\";\n\nconst CharacterList = () => {\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    species: \"\",\n    gender: \"\",\n    status: \"\",\n  });\n\n  const fetchCharacters = async () => {\n    setLoading(true);\n    try {\n      const data = await getAllCharacters(filters);\n      console.log(data); // Verifica la respuesta de la API\n      setCharacters(data.results || []); // Asegúrate de que se actualice correctamente\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchCharacters();\n  }, []); // Solo se ejecuta una vez al cargar el componente\n\n  const applyFilters = () => {\n    fetchCharacters();\n  };\n\n  const handleSearch = (searchTerm) => {\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      name: searchTerm, // Actualizamos el estado de name con el término de búsqueda\n    }));\n    fetchCharacters();\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"character-list\">\n      <CharacterSearchh onSearch={handleSearch} />\n      <CharacterFilter\n        filters={filters}\n        setFilters={setFilters}\n        onFilter={applyFilters}\n      />\n      <div className=\"character-list\">\n        {characters.map((character) => (\n          <div className=\"character-card\" key={character.id}>\n            <img src={character.image} alt={character.name} />\n            <h3>{character.name}</h3>\n            <Link to={`/character/${character.id}`}>\n              <button className=\"btn-more\">Ver más</button>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,OAAO,qBAAqB;AAC5B,OAAOC,eAAe,MAAM,qCAAqC;AACjE,OAAOC,eAAe,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC;IACrCiB,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,IAAI,GAAG,MAAMnB,gBAAgB,CAACa,OAAO,CAAC;MAC5CO,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;MACnBX,aAAa,CAACW,IAAI,CAACG,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZX,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdqB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBP,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,MAAMQ,YAAY,GAAIC,UAAU,IAAK;IACnCb,UAAU,CAAEc,WAAW,KAAM;MAC3B,GAAGA,WAAW;MACdC,IAAI,EAAEF,UAAU,CAAE;IACpB,CAAC,CAAC,CAAC;IACHT,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,IAAIT,OAAO,EAAE,oBAAOL,OAAA;IAAA0B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIvB,KAAK,EAAE,oBAAOP,OAAA;IAAA0B,QAAA,GAAK,SAAO,EAACnB,KAAK;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7B1B,OAAA,CAACgC,gBAAgB;MAACC,QAAQ,EAAEX;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5C9B,OAAA,CAACH,eAAe;MACdY,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBwB,QAAQ,EAAEb;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF9B,OAAA;MAAK+B,SAAS,EAAC,gBAAgB;MAAAL,QAAA,EAC5BvB,UAAU,CAACgC,GAAG,CAAEC,SAAS,iBACxBpC,OAAA;QAAK+B,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC7B1B,OAAA;UAAKqC,GAAG,EAAED,SAAS,CAACE,KAAM;UAACC,GAAG,EAAEH,SAAS,CAACX;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClD9B,OAAA;UAAA0B,QAAA,EAAKU,SAAS,CAACX;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzB9B,OAAA,CAACL,IAAI;UAAC6C,EAAE,EAAE,cAAcJ,SAAS,CAACK,EAAE,EAAG;UAAAf,QAAA,eACrC1B,OAAA;YAAQ+B,SAAS,EAAC,UAAU;YAAAL,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA,GAL4BM,SAAS,CAACK,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAM5C,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/DID,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AAiEnB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}