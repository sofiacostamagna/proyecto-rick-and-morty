{"ast":null,"code":"var _jsxFileName = \"/Users/sofia/Desktop/rick-and-morty-lab/src/components/CharacterList/CharacterList.js\",\n  _s = $RefreshSig$();\n// src/components/CharacterList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCharacters } from \"../../services/rickAndMortyApi\";\nimport \"./CharacterList.css\";\nimport CharacterFilter from \"../CharactersFilter/CharacterFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterList = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Función para obtener personajes\n  const fetchCharacters = async filters => {\n    try {\n      const data = await getAllCharacters(filters);\n      setCharacters(data.results); // Establece los personajes en el estado\n    } catch (err) {\n      setError(err.message); // Maneja el error\n    } finally {\n      setLoading(false); // Actualiza el estado de carga\n    }\n  };\n  useEffect(() => {\n    fetchCharacters(); // Llama a la función al cargar el componente\n  }, []);\n  const handleFilter = filters => {\n    setLoading(true); // Muestra un indicador de carga\n    fetchCharacters(filters); // Obtiene personajes filtrados\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-list\",\n    children: [/*#__PURE__*/_jsxDEV(CharacterFilter, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), \" \", characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-more\",\n        children: \"Ver m\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, character.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterList, \"lOlgLUo9pyE6tS3KNv2YXDUknQc=\");\n_c = CharacterList;\nexport default CharacterList;\nvar _c;\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"names":["React","useEffect","useState","Link","getAllCharacters","CharacterFilter","jsxDEV","_jsxDEV","CharacterList","_s","characters","setCharacters","loading","setLoading","error","setError","fetchCharacters","filters","data","results","err","message","handleFilter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onFilter","map","character","src","image","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/sofia/Desktop/rick-and-morty-lab/src/components/CharacterList/CharacterList.js"],"sourcesContent":["// src/components/CharacterList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCharacters } from \"../../services/rickAndMortyApi\";\nimport \"./CharacterList.css\";\nimport CharacterFilter from \"../CharactersFilter/CharacterFilter\";\n\nconst CharacterList = () => {\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Función para obtener personajes\n  const fetchCharacters = async (filters) => {\n    try {\n      const data = await getAllCharacters(filters);\n      setCharacters(data.results); // Establece los personajes en el estado\n    } catch (err) {\n      setError(err.message); // Maneja el error\n    } finally {\n      setLoading(false); // Actualiza el estado de carga\n    }\n  };\n\n  useEffect(() => {\n    fetchCharacters(); // Llama a la función al cargar el componente\n  }, []);\n\n  const handleFilter = (filters) => {\n    setLoading(true); // Muestra un indicador de carga\n    fetchCharacters(filters); // Obtiene personajes filtrados\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"character-list\">\n      <CharacterFilter onFilter={handleFilter} />{\" \"}\n      {/* Pasa la función de filtrado */}\n      {characters.map((character) => (\n        <div className=\"character-card\" key={character.id}>\n          <img src={character.image} alt={character.name} />\n          <h3>{character.name}</h3>\n          <button className=\"btn-more\">Ver más</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CharacterList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}